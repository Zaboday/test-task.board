user www-data;
worker_processes auto;
pid /run/nginx.pid;
daemon off;
events {
  worker_connections  2048;
  multi_accept on;
  accept_mutex off;
  use epoll;
}

http {
  server_tokens off;
  proxy_cache_path /tmp/static levels=1:2 keys_zone=my_cache:20m max_size=10g inactive=1440m;
  proxy_temp_path /tmp/static/temp;
  #proxy_cache_key $server_name$request_uri;
  proxy_cache_key "$request_method|$http_if_modified_since|$http_if_none_match|$host|$request_uri";
  proxy_cache_min_uses 1;
  #proxy_max_temp_file_size 0;
  proxy_buffers 8 2m;
  proxy_buffer_size 10m;
  proxy_busy_buffers_size 10m;
  # Указывает в каких случаях клиенту можно отдать несвежий ответ из кеша
  proxy_cache_use_stale error timeout invalid_header http_500 http_502 http_503 http_504;
  proxy_cache_revalidate on;
  proxy_cache_lock on;

#  fastcgi_cache_key $host$request_uri$http_authorization;
  fastcgi_cache_key "$scheme$request_method$host$request_uri$http_authorization";
  fastcgi_cache_min_uses 1;
  fastcgi_cache_path /tmp/api levels=1:2 keys_zone=api_cache:5m max_size=1g inactive=10m;
  fastcgi_temp_path /tmp/api/temp;
  add_header X-Cache $upstream_cache_status;

  types_hash_max_size 2048;
  client_max_body_size 500M;
  include /etc/nginx/mime.types;
  log_format main
        '$remote_addr - $remote_user [$time_iso8601] '
        '"$request" $status  $request_length $bytes_sent '
        '"$http_referer" "$http_user_agent" '
        '$request_time $upstream_connect_time $upstream_header_time $upstream_response_time '
        '$gzip_ratio $request_id "$upstream_addr"';

  log_format cache
        '$remote_addr - $remote_user [$time_iso8601] '
        '"$request" $status $request_length $bytes_sent '
        '"$http_referer" "$http_user_agent" '
        '$request_time $upstream_connect_time $upstream_header_time $upstream_response_time '
        '$gzip_ratio $request_id "$upstream_addr" $upstream_cache_status';

  client_header_timeout 10m;
  client_body_timeout 10m;
  send_timeout 10m;

  connection_pool_size 256;
  client_header_buffer_size 1k;
  large_client_header_buffers 4 32k;
  request_pool_size 4k;

  default_type application/octet-stream;
  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;
  gzip on;
  gzip_disable "msie6";
  gzip_min_length 1100;
  gzip_buffers 4 8k;
  gzip_types text/plain text/css application/x-javascript text/xml application/xml application/javascript text/javascript application/json image/svg+xml;
  gzip_comp_level 5;

  output_buffers 1 32k;
  postpone_output 1460;

  sendfile on;
  sendfile_max_chunk 512k;
  tcp_nopush on;
  tcp_nodelay on;

  keepalive_timeout 75 20;

  ignore_invalid_headers on;
  # No iframes
  add_header X-Frame-Options SAMEORIGIN;
  # We'll supply correct content types, don't let browsers guess
  add_header X-Content-Type-Options nosniff;
#  server {
#          listen *:80;
#          listen [::]:80 ipv6only=on;
#          large_client_header_buffers 4 16k;
#          proxy_set_header Host $host;
#          location / {
#              rewrite ^(.*)$ https://$host$1 permanent;
#          }
#  }

  include /etc/nginx/conf.d/*.conf;
  include /etc/nginx/sites-available/*;
  open_file_cache          max=2000 inactive=600s;
  charset UTF-8;
}

server {
        listen 80;
        server_name laravel.local;

        add_header X-Request-ID $request_id always; # Return to client


        access_log /var/log/nginx/laravel.access_log cache;
        error_log /var/log/nginx/laravel.error_log warn;

        root /var/www/laravel/public;
        index index.html index.htm index.php;

        charset utf-8;

        client_header_timeout 60s;
        client_body_timeout 60s;
        send_timeout 60s;

        location = /stat {
            stub_status on;
            access_log  off;
        }

        location / {
            try_files $uri /index.php$is_args$args;
        }

        location = /favicon.ico { access_log off; log_not_found off; }
        location = /robots.txt  { access_log off; log_not_found off; }

        #access_log off;

        sendfile on;

        client_max_body_size 500m;
        client_body_buffer_size 40M;

        location /opcache/ {
            alias /var/www/opcache-gui/;
            auth_basic "Password-protected Area";
            location ~ \.php$ {
                fastcgi_pass php-upstream;
                fastcgi_index index.php;
                include fastcgi_params;
                fastcgi_param SCRIPT_FILENAME $request_filename;
                fastcgi_ignore_client_abort off;
                fastcgi_param  HTTP_X_REQUEST_ID $request_id;
                add_header  X-Upstream  $upstream_addr;
                add_header  X-Request-ID $request_id; # Return to client
            }
            location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
                access_log    off;
                log_not_found    off;
                expires 1M;
            }

        }

        # DEV
        # This rule should only be placed on your development environment
        # In production, don't include this and don't deploy app_dev.php or config.php
        location ~ ^/index.php(/|$) {
            fastcgi_pass php-upstream;
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            include fastcgi_params;
            # When you are using symlinks to link the document root to the
            # current version of your application, you should pass the real
            # application path instead of the path to the symlink to PHP
            # FPM.
            # Otherwise, PHP's OPcache may not properly detect changes to
            # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
            # for more information).
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            fastcgi_param DOCUMENT_ROOT $realpath_root;
            add_header  X-Upstream  $upstream_addr always;
            add_header  X-Request-ID $request_id always; # Return to client
        }

        # return 404 for all other php files not matching the front controller
        # this prevents access to other php files you don't want to be accessible.
        location ~ \.php$ {
            return 404;
        }
        ssi on;

}